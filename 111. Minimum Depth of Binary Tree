Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: 2
Example 2:

Input: root = [2,null,3,null,4,null,5,null,6]
Output: 5
 

Constraints:

The number of nodes in the tree is in the range [0, 105].
-1000 <= Node.val <= 1000


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


class Solution
{
    int minVal=Integer.MAX_VALUE;
    public int minDepth(TreeNode root)
    {
        return helper(root);
    }
    protected int helper(TreeNode curr){
        if(curr==null)
            return 0;
        int left=helper(curr.left);
        int right=helper(curr.right);
        return (left==0 || right==0)?left+right+1:
        Math.min(left,right)+1;
}
}
