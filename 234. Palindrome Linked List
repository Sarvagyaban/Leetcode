Given the head of a singly linked list, return true if it is a 
palindrome
 or false otherwise.

 

Example 1:


Input: head = [1,2,2,1]
Output: true
Example 2:


Input: head = [1,2]
Output: false
 

Constraints:

The number of nodes in the list is in the range [1, 105].
0 <= Node.val <= 9
 
 
 ---------------------------*******************************-------------------------------------------------************************-----------------------------------*****
 class Solution {
    public boolean isPalindrome(ListNode head) 
    {
       if(head==null ||head.next==null)
       return true; 
    List<Integer> list=new ArrayList<>();
    while(head!=null){
        list.add(head.val);
        head=head.next;
    }
    int start=0; 
    int end=list.size()-1;
    while(start<end){
        if(list.get(start)!=list.get(end)){
            return false;
        }
        start++;
            end--;
    }
    return true;
    }
}
