Given a string s, return the longest 
palindromic
 
substring
 in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        if(n <= 1) return s;
        int maxLen = 1;
        int start = 0;
        for(int i=0;i<n;i++){
            int l = i;
            int r = i;
            while(l >= 0 && r < n && s.charAt(l) == s.charAt(r)){
                l--;
                r++;
            }
            int len = r-l-1;
            if(len > maxLen){
                maxLen = len;
                start = l+1;
            }
        }
        for(int i=0;i<n;i++){
            int l = i;
            int r = i+1;
            while(l >= 0 && r<n && s.charAt(l) == s.charAt(r)){
                l--;
                r++;
            }
            int len = r-l-1;
            if(len > maxLen){
                maxLen = len;
                start = l+1;
            }
        }
        return s.substring(start,start+maxLen);
    }
}
