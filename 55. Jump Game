Given the head of a linked list, remove the nth node from the end of the list and return its head.

 

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]
 

Constraints:

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz
 
 
 
 
 
 
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 class Solution {
 public ListNode removeNthFromEnd(ListNode head, int n) {
 if(head.next==null) return null;
 ListNode fast = head;
 ListNode slow = head;
 ListNode res = slow;
 for(int i=1;i<n;i++)
 fast = fast.next;
 while(fast.next!=null)
 {
 res = slow;
 slow = slow.next;
 fast = fast.next;
 }
 if(slow==head) head=head.next;
 res.next = slow.next;
 return head;
 }
}
